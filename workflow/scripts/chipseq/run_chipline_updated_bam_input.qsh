#!/bin/bash -ex

#SBATCH --job-name=run_chipline
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=16
#SBATCH --mem=200gb
#SBATCH --time=150:00:00
#SBATCH --output=results/peaks/chipline_v2/logs/run_chipline/run_chipline.%A.%a.out
#SBATCH --error=results/peaks/chipline_v2/logs/run_chipline/run_chipline.%A.%a.err
#SBATCH --mail-type=ALL,ARRAY_TASKS

# print start time message
start_time=$(date "+%Y.%m.%d.%H.%M")
echo "Start time: $start_time"

# print start message
echo "Started: run_chipline"

# run bash in strict mode
set -euo pipefail
IFS=$'\n\t'

# make sure to work starting from the base directory for this project 
cd $SLURM_SUBMIT_DIR

source workflow/source_paths.sh

# set paths to softwares
PATH=${bowtie2}:$PATH # bowtie2
PATH=/share/apps/picard-tools/picard-tools-2.7.1/:$PATH # picard
PATH=${phantompeakqualtools}:$PATH # phantompeakqualtools
PATH=${software}:$PATH # Utilities "bedGraphToBigWig", "bedSort", "bigBedToBed", "hubCheck", "fetchChromSizes"
PATH=${mamba_env}/lc-pipelines/bin/:$PATH # samtools + others
PATH=${mamba_env}/macs2/bin:$PATH # macs2
PATH=${hichip_db_env}:$PATH

echo "which samtools?"
which samtools

#=================
# main executable script of the ChIP seq pipeline
#=================
# developed by - Sourya Bhattacharyya
# modified by - Nikhil Rao
# modified by - Joaquin Reyna
# Vijay-AY lab
# La Jolla Institute for Allergy and Immunology
#=================

CodeDir="${HOME}/packages/chipline/ChIPLine/"
CodeExec="$CodeDir/bin/pipeline.sh"

#########################################################################################
# setup metadata
#########################################################################################

# extract the sample information
IFS=$'\t'

cell="NCM"
sample_name="${cell}_merged_donors.phs001703v4p1.Homo_Sapiens.H3K27ac.b1"
bam_input="${SLURM_SUBMIT_DIR}/results/peaks/chipline_v2/${sample_name}/${cell}_merged.bam"
ref_genome="grch38"

# set the reference genome
if [ "$ref_genome" = "grch38" ]; then
    echo "Using GRCh38"
    bowtie2_index="${Database_HiChIP_eQTL_GWAS}/Data/RefGenome/bowtie2_index/hg38/hg38"
    macs2_genomesize="hs"
    config="config/chipline/configfile.grch38.txt"
elif [ "$ref_genome" = "mm10" ]; then
    echo "Using mm10"
    bowtie2_index="${Database_HiChIP_eQTL_GWAS}/Data/RefGenome/bowtie2_index/mm10/mm10"
    macs2_genomesize="mm"
    config="config/chipline/configfile.mm10.txt"
fi

###############################################################################
# run the chipline pipeline 
###############################################################################

# assign the read arguments
read_args="-f ${bam_input}"


# setup some additional info
prefix="${sample_name}"
outdir=$(realpath "results/peaks/chipline_v2/${prefix}")
configfile=$(realpath "$config")

# setup the command as a string
overwrite=0 # no
#overwrite=1 # yes

#debug=0 # no
debug=1 # yes

# setup the command as a string
chipline_command="$CodeExec ${read_args} -C $configfile \
                    -n $prefix -g $bowtie2_index -d $outdir -t 16 \
                    -m 25G -T 1 -q 30 -D ${debug} -p ${macs2_genomesize} -O $overwrite"

# run the command
echo "Running: $chipline_command"
eval $chipline_command


###############################################################################
# logging termination
###############################################################################
echo
echo "# Logging termination"

# print end message
echo "Ended: run_chipline"

# print end time message
end_time=$(date "+%Y.%m.%d.%H.%M")
echo "End time: $end_time"