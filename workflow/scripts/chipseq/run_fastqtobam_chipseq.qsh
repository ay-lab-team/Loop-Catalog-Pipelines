#!/bin/bash -ex

#PBS -l nodes=1:ppn=4
#PBS -l mem=60gb
#PBS -l walltime=10:00:00
#PBS -e results/fastqs/chipseq/logs/
#PBS -o results/fastqs/chipseq/logs/
#PBS -N run_fastqtobam_chipseq
#PBS -m ae
#PBS -j oe
#PBS -V

# example run:
# 1) qsub -t <index1>,<index2>,... workflow/scripts/run_fastqtobam_chipseq.qsh
# 2) qsub -t <index-range> workflow/scripts/run_fastqtobam_chipseq.qsh
# 3) qsub -t <index1>,<index2>,<index-range1> workflow/scripts/run_fastqtobam_chipseq.qsh
# 4) qsub -t <index-range1>,<index-range2>,... workflow/scripts/run_fastqtobam_chipseq.qsh
# 5) qsub -t <any combination of index + ranges> workflow/scripts/run_fastqtobam_chipseq.qsh

# print start time message
start_time=$(date "+%Y.%m.%d.%H.%M")
echo "Start time: $start_time"

# print start message
echo "Started: run_fastqtobam_chipseq"

# run bash in strict mode
set -euo pipefail
IFS=$'\n\t'

# make sure to work starting from the base directory for this project 
cd $PBS_O_WORKDIR

PATH=/mnt/BioAdHoc/Groups/vd-ay/nrao/hichip_database/chipline/software/bowtie2/bowtie2-2.4.5:$PATH # bowtie2


# extract the sample information using the PBS ARRAYID
IFS=$'\t'
samplesheet="results/samplesheets/fastq/2022.05.13.chipseq_tracker.tsv"
sample_info=( $(cat $samplesheet | sed -n "${PBS_ARRAYID}p") )

# construct the name of the control file:
name="${sample_info[0]}"
gse_id="${sample_info[2]}"

organism="${sample_info[11]}"
organism=$(echo "$organism" | awk '{print tolower($0)}') # convert string to lowercase
organism=$(echo "$organism" | awk '{for (i=1;i<=NF;i++) $i=toupper(substr($i,1,1)) substr($i,2)} 1') # Capitalize each word

control_sample_name="$name.$gse_id.$organism.input"
control_sample_name="${control_sample_name// /_}"

control_outdir="results/fastqs/chipseq/$control_sample_name/"
control_srr_id="${sample_info[7]}"

# Check that the directory containing the control fastq file exists and that a bam file doesn't already exist
# Then, create a bam file in the directory
if [ -d $control_outdir ] && [ ! -f "$control_outdir/$control_srr_id.bam" ]
then
    bowtie2 -x /mnt/BioAdHoc/Groups/vd-ay/Database_HiChIP_eQTL_GWAS/Data/RefGenome/bowtie2_index/hg38/hg38 -U "$control_outdir/$control_srr_id.fastq.gz" | samtools view -bS - > "$control_outdir/$control_srr_id.bam"
    
else
    echo "The directory $control_outdir does not exist!"
fi


# print end message
echo "Ended: run_fastqtobam_chipseq"

# print end time message
end_time=$(date "+%Y.%m.%d.%H.%M")
echo "End time: $end_time"